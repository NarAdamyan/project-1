 *
Narine Adamyan
Ինչի՞ համար է նախատեսված ֆունկցիան։ Բերեք օրինակներ, ներկայացնելով ֆունկցիայի սահմանումները։ *
Ֆունկցիաները նախատեսված են կոդը ավելի գրագետ և ընթեռնելի դարձնելու համար: Մասնաորապես հնարավորություն է տալիս կոդի մի որոշակի մաս, որը կարիք կա մի քանի անգամ օգտագործելու, գրել ֆունկցիայով, և կրկին օգտագործելու դեպքում, պարզապես կանչել այն,օգտագործել մեզ հարմար փոփոխականներով, նորից գրելու փոխարեն:
1. function my_function(){
    echo " "
    }
2. function my_function{
    echi " "
    }
3. my_function (){
    }
Ինչպե՞ս են ֆունկցիային արգումենտ փոխանցում։ Ինչպե՞ս կարող ենք վերադարձնել կատարված ֆունկցիայի վիճակը (status): *
կանչում ենք ֆունկցիան, կողքը գրում փոփոխականները որոնց հետ պետք է աշխատել:ֆունկցիայի մեջ գրվում են հատուկ փոփխականներով $n :
Ֆունկցիայի մեջ օգտագործում ենք return, որը նախատեսված է միայն ստատուսը իմանալու համար . echo "status: $? "որը վերադարցնում է exit status-ը և հնարավորություն տալիս գործունեություն ծավալել:
Ինչպե՞ս կարող ենք ստեղծել global եւ local փոփոխականներ։ Ինչո՞վ են դրանք տարբերվում իրարից։
 *
Լոկալ փոփոխականը օգտագործվում է ֆունցիայի մեջ, տվյալ բլոկում փոփոխականի դիմաց գրելով Լոկալ , և ոևրէ արտաքին փոփոխության ենթարկվել չի կարող: Գլոբալ փոփոխականը պարզապես մոտքագրելով արժեքը ֆունկցիայի մեջ, նախատեսված է ֆունկցիան կանչելիս հնարավորություն ունենալ փոխել փոփոխականի արժեքը և ֆունկցիան աշխատեցնել այդ պահին անհրաժեշտ արժեքով:
Ինչի՞ համար է նախատեսված ցիկլը։ Թվարկեք ցիկլների տեսակները։
 *
զանգվածների հետ աշխատանքի համար, երբ բոլոր էլեմենտների հետ պետք է կատարել նույն գործունեությունը. For, while, until
Ինչպե՞ս են սահմանում զանգված։ Ինչպե՞ս է հնարավոր իմանալ զանվածի չափը եւ ինդեքսները։ Բերել օրինակներ։
 *
array=("first item" "second item" "third" "item")
Array size: ${#array[*]} 
Array items and indexes:${!array[*]}

array=("first item" "second item" "third" "item")


for ix in ${!array[*]}
do


        echo "Array size: ${#array[*]}" 
        echo "Array items and indexes:${!array[*]}" 
        
done

Ինչ տեսակի statement֊ներ են օգտագործում ցիկլները կառավարելու համար։
 *
    break
    continue
Գրել ցիկլ, որը կստեղծի 10 հատ .txt ֆոռմատով ֆայլ, եւ դրանց մեջ կգրի հերթական ինդեքսը։

 *
# !/bin/bash
for i in {1..10}
do
        touch $i.txt
done
Գրել ֆունկցիա, որի մեջ կօգտագործվի ցիկլ։ Ցիկլի օգնությամբ պտտվեք ֆայլերի վրայով և ստուգեք, եթե ֆայլը պանակ է, ապա դադարեցրեք ցիկլը։ *
# !/bin/bash
fileOrFolder(){
for file in /home/narine/*
do
if [ -d "$file"]; then
    break
fi
done
}

fileOrFolder
                
Գրել ֆունկցիա, որը որրպես արգումենտ կունենա թիվ, եւ կհաշվի այդ թվի ֆակտորիալը։ (օգտագործել միայն while loop): *

factorial(){

echo "Write the number to calculate"
read num

fact=1

while [ $num -gt 1 ]
do
  fact=$((fact * num))  
  num=$((num - 1))    
done

echo $fact
} 
factorial

